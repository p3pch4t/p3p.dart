// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings to p3p golang api
class P3pgo {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  P3pgo(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  P3pgo.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void Print(
    ffi.Pointer<ffi.Char> s,
  ) {
    return _Print(
      s,
    );
  }

  late final _PrintPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'Print');
  late final _Print =
      _PrintPtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  int HealthCheck() {
    return _HealthCheck();
  }

  late final _HealthCheckPtr =
      _lookup<ffi.NativeFunction<GoUint8 Function()>>('HealthCheck');
  late final _HealthCheck = _HealthCheckPtr.asFunction<int Function()>();

  int InitStore(
    ffi.Pointer<ffi.Char> storePath,
  ) {
    return _InitStore(
      storePath,
    );
  }

  late final _InitStorePtr =
      _lookup<ffi.NativeFunction<GoUint8 Function(ffi.Pointer<ffi.Char>)>>(
          'InitStore');
  late final _InitStore =
      _InitStorePtr.asFunction<int Function(ffi.Pointer<ffi.Char>)>();

  int ShowSetup() {
    return _ShowSetup();
  }

  late final _ShowSetupPtr =
      _lookup<ffi.NativeFunction<GoUint8 Function()>>('ShowSetup');
  late final _ShowSetup = _ShowSetupPtr.asFunction<int Function()>();

  int CreateSelfInfo(
    ffi.Pointer<ffi.Char> username,
    ffi.Pointer<ffi.Char> email,
    int bitSize,
  ) {
    return _CreateSelfInfo(
      username,
      email,
      bitSize,
    );
  }

  late final _CreateSelfInfoPtr = _lookup<
      ffi.NativeFunction<
          GoUint8 Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
              GoInt)>>('CreateSelfInfo');
  late final _CreateSelfInfo = _CreateSelfInfoPtr.asFunction<
      int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, int)>();

  ffi.Pointer<ffi.Char> GetAllUserInfo() {
    return _GetAllUserInfo();
  }

  late final _GetAllUserInfoPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'GetAllUserInfo');
  late final _GetAllUserInfo =
      _GetAllUserInfoPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  int AddUserByPublicKey(
    ffi.Pointer<ffi.Char> publickey,
  ) {
    return _AddUserByPublicKey(
      publickey,
    );
  }

  late final _AddUserByPublicKeyPtr =
      _lookup<ffi.NativeFunction<GoInt Function(ffi.Pointer<ffi.Char>)>>(
          'AddUserByPublicKey');
  late final _AddUserByPublicKey =
      _AddUserByPublicKeyPtr.asFunction<int Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> GetChatMessages(
    int UserInfoID,
  ) {
    return _GetChatMessages(
      UserInfoID,
    );
  }

  late final _GetChatMessagesPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(GoInt)>>(
          'GetChatMessages');
  late final _GetChatMessages =
      _GetChatMessagesPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> GetMessageType(
    int msgID,
  ) {
    return _GetMessageType(
      msgID,
    );
  }

  late final _GetMessageTypePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(GoInt)>>(
          'GetMessageType');
  late final _GetMessageType =
      _GetMessageTypePtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> GetMessageText(
    int msgID,
  ) {
    return _GetMessageText(
      msgID,
    );
  }

  late final _GetMessageTextPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(GoInt)>>(
          'GetMessageText');
  late final _GetMessageText =
      _GetMessageTextPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  int GetMessageReceivedTimestamp(
    int msgID,
  ) {
    return _GetMessageReceivedTimestamp(
      msgID,
    );
  }

  late final _GetMessageReceivedTimestampPtr =
      _lookup<ffi.NativeFunction<GoInt64 Function(GoInt)>>(
          'GetMessageReceivedTimestamp');
  late final _GetMessageReceivedTimestamp =
      _GetMessageReceivedTimestampPtr.asFunction<int Function(int)>();

  int GetMessageIsIncoming(
    int msgID,
  ) {
    return _GetMessageIsIncoming(
      msgID,
    );
  }

  late final _GetMessageIsIncomingPtr =
      _lookup<ffi.NativeFunction<GoUint8 Function(GoInt)>>(
          'GetMessageIsIncoming');
  late final _GetMessageIsIncoming =
      _GetMessageIsIncomingPtr.asFunction<int Function(int)>();

  int GetUserInfoId(
    int uid,
  ) {
    return _GetUserInfoId(
      uid,
    );
  }

  late final _GetUserInfoIdPtr =
      _lookup<ffi.NativeFunction<GoInt64 Function(GoInt)>>('GetUserInfoId');
  late final _GetUserInfoId = _GetUserInfoIdPtr.asFunction<int Function(int)>();

  int GetPrivateInfoId() {
    return _GetPrivateInfoId();
  }

  late final _GetPrivateInfoIdPtr =
      _lookup<ffi.NativeFunction<GoInt64 Function()>>('GetPrivateInfoId');
  late final _GetPrivateInfoId =
      _GetPrivateInfoIdPtr.asFunction<int Function()>();

  ffi.Pointer<ffi.Char> GetUserInfoPublicKeyArmored(
    int uid,
  ) {
    return _GetUserInfoPublicKeyArmored(
      uid,
    );
  }

  late final _GetUserInfoPublicKeyArmoredPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(GoInt)>>(
          'GetUserInfoPublicKeyArmored');
  late final _GetUserInfoPublicKeyArmored = _GetUserInfoPublicKeyArmoredPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> GetPrivateInfoPublicKeyArmored() {
    return _GetPrivateInfoPublicKeyArmored();
  }

  late final _GetPrivateInfoPublicKeyArmoredPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'GetPrivateInfoPublicKeyArmored');
  late final _GetPrivateInfoPublicKeyArmored =
      _GetPrivateInfoPublicKeyArmoredPtr.asFunction<
          ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> GetUserInfoUsername(
    int uid,
  ) {
    return _GetUserInfoUsername(
      uid,
    );
  }

  late final _GetUserInfoUsernamePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(GoInt)>>(
          'GetUserInfoUsername');
  late final _GetUserInfoUsername =
      _GetUserInfoUsernamePtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> GetPrivateInfoUsername() {
    return _GetPrivateInfoUsername();
  }

  late final _GetPrivateInfoUsernamePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'GetPrivateInfoUsername');
  late final _GetPrivateInfoUsername =
      _GetPrivateInfoUsernamePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  void SetUserInfoUsername(
    int uid,
    ffi.Pointer<ffi.Char> username,
  ) {
    return _SetUserInfoUsername(
      uid,
      username,
    );
  }

  late final _SetUserInfoUsernamePtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(GoInt, ffi.Pointer<ffi.Char>)>>(
      'SetUserInfoUsername');
  late final _SetUserInfoUsername = _SetUserInfoUsernamePtr.asFunction<
      void Function(int, ffi.Pointer<ffi.Char>)>();

  void SetPrivateInfoUsername(
    ffi.Pointer<ffi.Char> username,
  ) {
    return _SetPrivateInfoUsername(
      username,
    );
  }

  late final _SetPrivateInfoUsernamePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'SetPrivateInfoUsername');
  late final _SetPrivateInfoUsername = _SetPrivateInfoUsernamePtr.asFunction<
      void Function(ffi.Pointer<ffi.Char>)>();

  void SetPrivateInfoEepsiteDomain(
    ffi.Pointer<ffi.Char> eepsite,
  ) {
    return _SetPrivateInfoEepsiteDomain(
      eepsite,
    );
  }

  late final _SetPrivateInfoEepsiteDomainPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'SetPrivateInfoEepsiteDomain');
  late final _SetPrivateInfoEepsiteDomain = _SetPrivateInfoEepsiteDomainPtr
      .asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> GetUserInfoEndpoint(
    int uid,
  ) {
    return _GetUserInfoEndpoint(
      uid,
    );
  }

  late final _GetUserInfoEndpointPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(GoInt)>>(
          'GetUserInfoEndpoint');
  late final _GetUserInfoEndpoint =
      _GetUserInfoEndpointPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  void SetUserInfoEndpoint(
    int uid,
    ffi.Pointer<ffi.Char> endpoint,
  ) {
    return _SetUserInfoEndpoint(
      uid,
      endpoint,
    );
  }

  late final _SetUserInfoEndpointPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(GoInt, ffi.Pointer<ffi.Char>)>>(
      'SetUserInfoEndpoint');
  late final _SetUserInfoEndpoint = _SetUserInfoEndpointPtr.asFunction<
      void Function(int, ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> GetPrivateInfoEndpoint() {
    return _GetPrivateInfoEndpoint();
  }

  late final _GetPrivateInfoEndpointPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'GetPrivateInfoEndpoint');
  late final _GetPrivateInfoEndpoint =
      _GetPrivateInfoEndpointPtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  void SetPrivateInfoEndpoint(
    ffi.Pointer<ffi.Char> endpoint,
  ) {
    return _SetPrivateInfoEndpoint(
      endpoint,
    );
  }

  late final _SetPrivateInfoEndpointPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'SetPrivateInfoEndpoint');
  late final _SetPrivateInfoEndpoint = _SetPrivateInfoEndpointPtr.asFunction<
      void Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> GetPublicKeyFingerprint(
    ffi.Pointer<ffi.Char> armored,
  ) {
    return _GetPublicKeyFingerprint(
      armored,
    );
  }

  late final _GetPublicKeyFingerprintPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('GetPublicKeyFingerprint');
  late final _GetPublicKeyFingerprint = _GetPublicKeyFingerprintPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  void SendMessage(
    int uid,
    ffi.Pointer<ffi.Char> text,
  ) {
    return _SendMessage(
      uid,
      text,
    );
  }

  late final _SendMessagePtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(GoInt64, ffi.Pointer<ffi.Char>)>>(
      'SendMessage');
  late final _SendMessage =
      _SendMessagePtr.asFunction<void Function(int, ffi.Pointer<ffi.Char>)>();
}

final class max_align_t extends ffi.Opaque {}

final class _GoString_ extends ffi.Struct {
  external ffi.Pointer<ffi.Char> p;

  @ptrdiff_t()
  external int n;
}

typedef ptrdiff_t = ffi.Long;

final class GoInterface extends ffi.Struct {
  external ffi.Pointer<ffi.Void> t;

  external ffi.Pointer<ffi.Void> v;
}

final class GoSlice extends ffi.Struct {
  external ffi.Pointer<ffi.Void> data;

  @GoInt()
  external int len;

  @GoInt()
  external int cap;
}

typedef GoInt = GoInt64;
typedef GoInt64 = ffi.LongLong;
typedef GoUint8 = ffi.UnsignedChar;

const int NULL = 0;
